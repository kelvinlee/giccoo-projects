// Generated by CoffeeScript 1.9.1
var ANIMATION_END_NAME, ANIMATION_END_NAMES, Store, TRANSITION_END_NAME, TRANSITION_END_NAMES, VENDORS, backUp, cdn, css3Prefix, debug, finished, hideShareWechat, i, j, layzr, len, loadStart, mTestElement, qrcode, tm;

VENDORS = ["Moz", 'webkit', 'ms', 'O'];

TRANSITION_END_NAMES = {
  "Moz": "transitionend",
  "webkit": "webkitTransitionEnd",
  "ms": "MSTransitionEnd",
  "O": "oTransitionEnd"
};

ANIMATION_END_NAMES = {
  "Moz": "animationend",
  "webkit": "webkitAnimationEnd",
  "ms": "MSAnimationEnd",
  "O": "oAnimationEnd"
};

mTestElement = document.createElement("div");

for (j = 0, len = VENDORS.length; j < len; j++) {
  i = VENDORS[j];
  css3Prefix = i;
  if ((css3Prefix + "Transition") in mTestElement.style) {
    break;
  }
  css3Prefix = false;
}

if (css3Prefix) {
  TRANSITION_END_NAME = TRANSITION_END_NAMES[css3Prefix];
  ANIMATION_END_NAME = ANIMATION_END_NAMES[css3Prefix];
}

Array.prototype.clean = function(deleteValue) {
  i = 0;
  while (i < this.length) {
    if (this[i] === deleteValue) {
      this.splice(i, 1);
      i--;
    }
    i++;
  }
  return this;
};

HTMLElement.prototype.getStyle = function(className) {
  if (this.currentStyle) {
    return this.currentStyle(className);
  } else {
    return document.defaultView.getComputedStyle(this, false)[className];
  }
};

qrcode = function() {
  return (function() {
    var hm, s;
    hm = document.createElement('script');
    hm.onload = function() {
      return new QRCode(document.getElementById("qrcode"), {
        width: 400,
        height: 400,
        text: window.location.href
      });
    };
    hm.src = '/libs/js/min/qrcode.min.js';
    s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(hm, s);
  })();
};

Store = {};

layzr = null;

tm = null;

debug = false;

cdn = "";

window.onload = function() {
  var ep;
  if (document.getElementById("qrcode").getStyle("display") === "block") {
    qrcode();
    return false;
  }
  riot.mount("*");
  ep = $(".load-progress .n");
  tm = setInterval(function() {
    if (parseInt(ep.html()) >= 96) {
      clearInterval(tm);
      return false;
    }
    return ep.html(parseInt(ep.html()) + parseInt(Math.random() * 5));
  }, 100);
  if ($("body").height() <= 460) {
    $("body").addClass("iphone4");
  }
  setTimeout(function() {
    return loadStart();
  }, 1000);
  return $(document).on("click", ".icon-wechat", function() {
    return $(".share-wechat").show();
  });
};

hideShareWechat = function() {
  return $(".share-wechat").hide();
};

loadStart = function() {
  var count, e, ep, now, timer;
  count = $("[data-layzr]").length;
  now = 0;
  ep = $(".load-progress .n");
  timer = setTimeout(function() {
    backUp("data-layzr");
    return finished();
  }, 2000);
  try {
    return layzr = new Layzr({
      selector: '[data-layzr]',
      attr: 'data-layzr',
      callback: function(e) {
        clearTimeout(timer);
        now++;
        if (now >= count) {
          clearInterval(tm);
          ep.html(parseInt((now / count) * 100));
          return finished();
        }
      }
    });
  } catch (_error) {
    e = _error;
    return console.log("error");
  }
};

finished = function() {
  setTimeout(function() {
    $("#loading").addClass("animated fadeOut");
    return $(".page.begin").removeClass("hide");
  }, 1500);
  return setTimeout(function() {
    return $("#loading").hide();
  }, 1000);
};

backUp = function(data) {
  return $("[" + data + "]").each(function() {
    var link;
    link = $(this).attr(data);
    $(this).attr("src", link);
    return $(this).removeAttr(data);
  });
};
