// Generated by CoffeeScript 1.9.1
var ANIMATION_END_NAME, ANIMATION_END_NAMES, TRANSITION_END_NAME, TRANSITION_END_NAMES, VENDORS, awardList, backBottle, backBottleMain, brandShow, css3Prefix, global, i, imageList, images, imgs, j, len, mTestElement, openAward, openBottle, openBottleMain, openBrand, openMedia, opened, page, pages;

VENDORS = ["Moz", 'webkit', 'ms', 'O'];

TRANSITION_END_NAMES = {
  "Moz": "transitionend",
  "webkit": "webkitTransitionEnd",
  "ms": "MSTransitionEnd",
  "O": "oTransitionEnd"
};

ANIMATION_END_NAMES = {
  "Moz": "animationend",
  "webkit": "webkitAnimationEnd",
  "ms": "MSAnimationEnd",
  "O": "oAnimationEnd"
};

mTestElement = document.createElement("div");

for (j = 0, len = VENDORS.length; j < len; j++) {
  i = VENDORS[j];
  css3Prefix = i;
  if ((css3Prefix + "Transition") in mTestElement.style) {
    break;
  }
  css3Prefix = false;
}

if (css3Prefix) {
  TRANSITION_END_NAME = TRANSITION_END_NAMES[css3Prefix];
  ANIMATION_END_NAME = ANIMATION_END_NAMES[css3Prefix];
}

Array.prototype.clean = function(deleteValue) {
  i = 0;
  while (i < this.length) {
    if (this[i] === deleteValue) {
      this.splice(i, 1);
      i--;
    }
    i++;
  }
  return this;
};

HTMLElement.prototype.getStyle = function(className) {
  if (this.currentStyle) {
    return this.currentStyle(className);
  } else {
    return document.defaultView.getComputedStyle(this, false)[className];
  }
};

(function() {
  var lastTime, vendors, x;
  lastTime = 0;
  vendors = ["webkit", "moz"];
  x = 0;
  while (x > vendors.length && !window.requestAnimationFrame) {
    console.log("" + vendors[x]);
  }
  window.requestAnimationFrame = window[vendors[x] + "RequestAnimationFrame"];
  window.cancelAnimationFrame = window[vendors[x] + "CancelAnimationFrame"] || window[vendors[x] + "CancelRequestAnimationFrame"];
  ++x;
  if (!window.requestAnimationFrame) {
    window.requestAnimationFrame = function(callback, element) {
      var currTime, id, timeToCall;
      currTime = new Date().getTime();
      timeToCall = Math.max(0, 16.7 - (currTime - lastTime));
      id = window.setTimeout(function() {
        callback(currTime + timeToCall);
      }, timeToCall);
      lastTime = currTime + timeToCall;
      return id;
    };
  }
  if (!window.cancelAnimationFrame) {
    window.cancelAnimationFrame = function(id) {
      clearTimeout(id);
    };
  }
})();

images = "";

imageList = ["http://disk.giccoo.com/projects/libs/img/wechat.png"];

imgs = [];

page = ["page-brand"];

pages = [".pages-brand"];

opened = false;

global = {};

window.onload = function() {
  riot.mount("*");
  $(".bottle-logo-next").css({
    bottom: 164 - $("body").height() * 0.13 - 18
  });
  $(".pages-award .icon").on("click", openAward);
  $(".pages-media .icon").on("click", openMedia);
  return $(".pages-brand .item").on("click", openBrand);
};

openBottle = function(evt) {
  var name;
  if (opened) {
    return false;
  }
  console.log(evt);
  name = $(evt).attr("page-name");
  $(evt).next().addClass("on");
  $(".bottle-" + name).addClass("Mybottle");
  $(".homepage").addClass("page-" + name);
  $(".pages-" + name).show();
  setTimeout(function() {
    return $(".pages-" + name).addClass("thispage");
  }, 1);
  return opened = true;
};

backBottle = function(name) {
  $(".homepage").removeClass("page-" + name);
  $(".bottle-" + name + " .white").removeClass("on");
  $(".pages-" + name).removeClass("thispage");
  $(".bottle-" + name).removeClass("Mybottle");
  setTimeout(function() {
    return $(".pages-" + name).hide();
  }, 2000);
  return opened = false;
};

openBottleMain = function(evt) {
  var name;
  if (opened) {
    return false;
  }
  name = $(evt).attr("page-name");
  $(evt).next().addClass("on");
  $(".bottle-" + name).addClass("Mybottle");
  $(".main").addClass("page-" + name);
  $(".pages-" + name).addClass("thispage");
  if ((global != null) && (global["bottle" + name] != null)) {
    global["bottle" + name].replay("replay");
  }
  opened = true;
  if (name === "brand") {
    return brandShow();
  }
};

backBottleMain = function(name) {
  $(".main").removeClass("page-" + name);
  $(".bottle-" + name + " .white").removeClass("on");
  $(".pages-" + name).removeClass("thispage");
  $(".bottle-" + name).removeClass("Mybottle");
  opened = false;
  if ((global != null) && (global["bottle" + name] != null)) {
    return global["bottle" + name].replay("normal");
  }
};

awardList = [{}];

openBrand = function(evt) {
  var e;
  evt.stopPropagation();
  e = $(evt.target);
  return console.log(e.attr("rel"));
};

openAward = function(evt) {
  var e;
  evt.stopPropagation();
  e = $(evt.target).parents(".icon");
  return console.log(e.attr("rel"));
};

openMedia = function(evt) {
  var e;
  evt.stopPropagation();
  e = $(evt.target).parents(".icon");
  return console.log(e.attr("rel"));
};

brandShow = function() {
  console.log(global.brandbg != null, global.brand != null);
  if ((global != null) && (global.brandbg != null)) {
    global.brandbg.replay("stop");
  }
  if ((global != null) && (global.brand != null)) {
    global.brand.replay("stop");
  }
  return setTimeout(function() {
    if ((global != null) && (global.brandbg != null)) {
      global.brandbg.replay("normal");
    }
    if ((global != null) && (global.brand != null)) {
      return global.brand.replay("normal");
    }
  }, 4100);
};
