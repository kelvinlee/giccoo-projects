// Generated by CoffeeScript 1.8.0
var Game, Player, bindOri, g, gun;

bindOri = function(portrait, landscape) {
  return window.addEventListener(("onorientationchange" in window ? "orientationchange" : "resize"), function() {
    if (window.orientation === 180 || window.orientation === 0) {
      portrait.call();
    }
    if (window.orientation === 90 || window.orientation === -90) {
      return landscape.call();
    }
  });
};

Player = (function() {
  function Player(name) {
    this.name = name;
    PIXI.Sprite.call(this);
    this.player = new PIXI.Sprite();
    this.size = 20;
    this.sl = 0.3;
    this.w = this.size * 3 * this.scale;
    this.h = this.size * 7 * this.scale;
    this.createBody();
    this.givemeaGun();
    this.player.position.x = this.size * 1.5;
    this.addChild(this.player);
    this.position.x = 100;
    this.position.y = 200;
  }

  Player.prototype = Object.create(PIXI.Sprite.prototype);

  Player.prototype.createBody = function() {
    var bodyColor, eyeColor, g, handColor, headerColor, lineColor;
    lineColor = 0x000000;
    headerColor = 0x75F31F;
    bodyColor = 0xfff000;
    eyeColor = 0x000000;
    handColor = 0xb4a900;
    this.header = new PIXI.Sprite();
    g = new PIXI.Graphics();
    g.lineStyle(2, lineColor);
    g.beginFill(headerColor, 1);
    g.drawCircle(this.size * 0, this.size * 1, this.size);
    this.header.addChild(g);
    this.eye = new PIXI.Sprite();
    g = new PIXI.Graphics();
    g.lineStyle(0);
    g.beginFill(eyeColor, 1);
    g.drawCircle(this.size * 0.3, this.size * 0.9, this.size * 0.2);
    g.drawCircle(this.size * 0.8, this.size * 0.9, this.size * 0.2);
    this.eye.addChild(g);
    this.body = new PIXI.Sprite();
    g = new PIXI.Graphics();
    g.lineStyle(2, lineColor);
    g.beginFill(bodyColor, 1);
    g.moveTo(this.size * -1.5, this.size * 2.5);
    g.lineTo(this.size * 1.5, this.size * 2.5);
    g.lineTo(this.size * 0.5, this.size * 7);
    g.lineTo(this.size * -0.5, this.size * 7);
    g.lineTo(this.size * -1.5, this.size * 2.5);
    g.endFill();
    this.body.addChild(g);
    this.player.addChild(this.header);
    this.player.addChild(this.body);
    return this.player.addChild(this.eye);
  };

  Player.prototype.givemeaGun = function() {
    this.gun = new gun(this.size);
    return this.player.addChild(this.gun);
  };

  Player.prototype.update = function() {};

  return Player;

})();

gun = (function() {
  function gun(size) {
    var g, gunColor, handColor, lineColor;
    this.size = size;
    PIXI.Sprite.call(this);
    lineColor = 0x000000;
    gunColor = 0x888888;
    this.gun = new PIXI.Sprite();
    g = new PIXI.Graphics();
    g.lineStyle(2, lineColor);
    g.beginFill(gunColor, 1);
    g.drawRoundedRect(0, 0, this.size * 2, this.size * 0.5, this.size * 0.1);
    g.drawRoundedRect(0, 0, this.size * 0.5, this.size * 1, this.size * 0.1);
    this.gun.addChild(g);
    this.gun.position.x = this.size * 1.8;
    this.gun.position.y = this.size * 3.3;
    handColor = 0x00ff00;
    this.leftHand = new PIXI.Sprite();
    g = new PIXI.Graphics();
    g.lineStyle(2, lineColor);
    g.beginFill(handColor, 1);
    g.drawCircle(0, 0, this.size * 0.4);
    this.leftHand.addChild(g);
    this.leftHand.position.x = this.size * -2;
    this.leftHand.position.y = this.size * 4;
    this.rightHand = new PIXI.Sprite();
    g = new PIXI.Graphics();
    g.lineStyle(2, lineColor);
    g.beginFill(handColor, 1);
    g.drawCircle(0, 0, this.size * 0.4);
    this.rightHand.addChild(g);
    this.rightHand.position.x = this.size * 2;
    this.rightHand.position.y = this.size * 4;
    this.addChild(this.leftHand);
    this.addChild(this.rightHand);
    this.addChild(this.gun);
  }

  gun.prototype = Object.create(PIXI.Sprite.prototype);

  gun.prototype.GunFill = function() {};

  return gun;

})();

Game = (function() {
  function Game(name, curtain) {
    var PlayTest, rendererOptions;
    this.name = name;
    this.stage = new PIXI.Stage(0xFFFFFF, true);
    this.stage.interactive = true;
    rendererOptions = {
      antialias: true
    };
    this.renderer = PIXI.autoDetectRenderer(620, 380, rendererOptions);
    document.getElementById(curtain).appendChild(this.renderer.view);
    PlayTest = new Player();
    this.stage.addChild(PlayTest);
    this.update();
  }

  Game.prototype.update = function() {
    this.renderer.render(this.stage);
    return requestAnimFrame(this.update.bind(this));
  };

  return Game;

})();

g = new Game("Gun", "Curtain");
