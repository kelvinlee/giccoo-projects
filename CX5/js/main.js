// Generated by CoffeeScript 1.12.7
var FormHeight, Loader, SendNote, Store, _loader, _startDate, _stepList, cdn, debug, global, hideSelfPage, isMM, layzr, link, loadWechatConfig, mainSlider, oldslideNumber, pc, qrcode, secondSlider, tabId, tabId2, taskData, tm, uid;

(function() {
  var lastTime, vendors, x;
  lastTime = 0;
  vendors = ["webkit", "moz"];
  x = 0;
  while (x > vendors.length && !window.requestAnimationFrame) {
    console.log("" + vendors[x]);
  }
  window.requestAnimationFrame = window[vendors[x] + "RequestAnimationFrame"];
  window.cancelAnimationFrame = window[vendors[x] + "CancelAnimationFrame"] || window[vendors[x] + "CancelRequestAnimationFrame"];
  ++x;
  if (!window.requestAnimationFrame) {
    window.requestAnimationFrame = function(callback, element) {
      var currTime, id, timeToCall;
      currTime = new Date().getTime();
      timeToCall = Math.max(0, 16.7 - (currTime - lastTime));
      id = window.setTimeout(function() {
        callback(currTime + timeToCall);
      }, timeToCall);
      lastTime = currTime + timeToCall;
      return id;
    };
  }
  if (!window.cancelAnimationFrame) {
    window.cancelAnimationFrame = function(id) {
      clearTimeout(id);
    };
  }
})();

qrcode = function() {
  return (function() {
    var hm, s;
    hm = document.createElement('script');
    hm.onload = function() {
      return new QRCode(document.getElementById("qrcode"), {
        width: 400,
        height: 400,
        text: window.location.href
      });
    };
    hm.src = '/libs/js/min/qrcode.min.js';
    s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(hm, s);
  })();
};

Store = {};

layzr = null;

tm = null;

oldslideNumber = 0;

debug = false;

cdn = "";

isMM = false;

FormHeight = 0;

global = {};

link = "http://api.giccoo.com";

mainSlider = {};

secondSlider = {};

tabId = 0;

tabId2 = 0;

_stepList = ["40,000", "70,000", "120,000"];

debug = false;

if (debug) {
  uid = "30102250";
  pc = "ad6ca3d5d8db6eb4af38dbeb13527470012669a8";
  localStorage.clear();
}

_startDate = new Date();

_startDate.setMonth(7);

_startDate.setDate(13);

_startDate.setHours(0);

_startDate.setMinutes(0);

_startDate.setSeconds(0);

_startDate.setMilliseconds(0);

taskData = [
  {
    startDate: _startDate,
    endDate: new Date(_startDate.getTime() + 10 * 24 * 60 * 60 * 1000)
  }
];

window.onload = function() {
  var MK;
  MK = $("body").width() / $("body").height();
  if ($("body").height() <= 460 || MK > 0.65) {
    $("body").addClass("iphone4");
  }
  riot.mount("*");
  $(".btn").on("click", function() {
    var _next, json;
    $(".page").removeClass("on");
    _next = $(this).attr("next-page");
    $(_next).addClass("on");
    if ($(this).attr("data-content")) {
      console.log($(this).attr("data-content"));
      console.log(JSON.parse($(this).attr("data-content")));
      json = JSON.parse($(this).attr("data-content"));
      return Store.contentx.updateContents(json);
    }
  });
  loadWechatConfig();
  wx.ready(function() {
    var shareContent;
    shareContent = {
      title: "第25小时的精彩",
      desc: "如果拥有了一天的第25个小时,你会为你的人生增添什么样的可能?",
      link: "http://m.giccoo.com/lincoln_mkz/",
      imgUrl: "http://image.giccoo.com/projects/lincoln_mkz/img/share.jpg",
      success: function() {},
      cancel: function() {}
    };
    wx.onMenuShareTimeline(shareContent);
    wx.onMenuShareAppMessage(shareContent);
    wx.onMenuShareQQ(shareContent);
    return wx.onMenuShareWeibo(shareContent);
  });
  return true;
};

hideSelfPage = function(self) {
  return $(".page").removeClass("on");
};

loadWechatConfig = function() {
  var hm, s, url;
  url = encodeURIComponent(window.location.href.split("#")[0]);
  hm = document.createElement('script');
  hm.src = "http://api.giccoo.com/api/config?url=" + url;
  s = document.getElementsByTagName('script')[0];
  s.parentNode.insertBefore(hm, s);
};

SendNote = function(msg, time) {
  if (time == null) {
    time = 3000;
  }
  $("body").append("<note title='" + msg + ("' time='" + time + "'></note>"));
  return riot.mount("note");
};

_loader = {};

Loader = function(id, title, type, time, more) {
  if (title == null) {
    title = "";
  }
  if (type == null) {
    type = "ball";
  }
  if (time == null) {
    time = 0;
  }
  if (more == null) {
    more = "";
  }
  if ($("#" + id).length > 0) {
    return _loader[id].loadend();
  }
  $("body").append("<loader id='" + id + "' title='" + title + "' type='" + type + ("' time='" + time + "'>" + more + "</loader>"));
  return riot.mount("loader");
};
